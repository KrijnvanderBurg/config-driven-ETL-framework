// https://containers.dev/implementors/json_reference/
{
	"name": "dataplatform.datastore.python",
	"dockerComposeFile": "docker-compose.yml",
	"service": "app",
	"workspaceFolder": "/workspace",
	// https://containers.dev/implementors/features.
	// "features": {},
	// "forwardPorts": [],
	// "postCreateCommand": "bash ${workspaceFolder}/.devcontainer/post_create_command.sh",
	"customizations": {
		"vscode": {
			"extensions": [
				"ms-python.python", // https://marketplace.visualstudio.com/items?itemName=ms-python.python
				"ms-python.vscode-pylance", // https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance
				"ms-azuretools.vscode-docker", // https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-docker
				"eamodio.gitlens", // https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens
				"dvirtz.parquet-viewer", // https://marketplace.visualstudio.com/items?itemName=dvirtz.parquet-viewer
				"tamasfe.even-better-toml", // https://marketplace.visualstudio.com/items?itemName=tamasfe.even-better-toml
				"ms-azure-devops.azure-pipelines", // https://marketplace.visualstudio.com/items?itemName=ms-azure-devops.azure-pipelines
				// "GitHub.copilot", // https://marketplace.visualstudio.com/items?itemName=GitHub.copilot
				// "GitHub.copilot-chat", // https://marketplace.visualstudio.com/items?itemName=GitHub.copilot-chat
				// Linter
				"ms-python.black-formatter", // https://marketplace.visualstudio.com/items?itemName=ms-python.black-formatter
				"ms-python.pylint", // https://marketplace.visualstudio.com/items?itemName=ms-python.pylint
				"ms-python.isort", // https://marketplace.visualstudio.com/items?itemName=ms-python.isort
				"ms-python.flake8", // https://marketplace.visualstudio.com/items?itemName=ms-python.flake8
				"ms-python.mypy-type-checker", // https://marketplace.visualstudio.com/items?itemName=ms-python.mypy-type-checker
				// Coverage
				"ryanluker.vscode-coverage-gutters",
				// Scanner
				"nwgh.bandit", // https://marketplace.visualstudio.com/items?itemName=nwgh.bandit
				// Documentation
				"njpwerner.autodocstring" // https://marketplace.visualstudio.com/items?itemName=njpwerner.autodocstring
			],
			"settings": {
				// Python
				"[python]": {
					"editor.defaultFormatter": "ms-python.black-formatter",
					"editor.formatOnSave": true,
					"editor.codeActionsOnSave": {
						"source.organizeImports": "explicit"
					}
				},
				//
				// Python/Pytest - https://code.visualstudio.com/docs/python/settings-reference
				//
				"python.testing.unittestEnabled": false,
				"python.testing.pytestEnabled": true,
				"python.testing.pytestArgs": [
					"-c",
					"${workspaceFolder}/.devcontainer/pytest.ini"
				],
				"python.languageServer": "Default",
				//
				// Pylance - https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance
				//
				"python.analysis.typeCheckingMode": "strict", // 'off' (default), 'basic', 'strict'
				"python.analysis.diagnosticMode": "workspace", // 'openFilesOnly' (default), 'workspace'
				"python.analysis.diagnosticSeverityOverrides": {
					// https://github.com/microsoft/pyright/blob/main/docs/configuration.md#type-check-diagnostics-settings
					"reportUnknownParameterType": false,
					"reportUnknownArgumentType": false,
					"reportUnknownVariableType": false,
					"reportUnknownMemberType": false,
					"reportMissingParameterType": false,
					"reportMissingTypeArgument": false,
					"reportGeneralTypeIssues": false
				},
				"python.analysis.completeFunctionParens": true,
				"python.analysis.inlayHints.variableType": true,
				"python.analysis.inlayHints.functionReturnTypes": true,
				"python.analysis.inlayHints.callArgumentName": true,
				"python.analysis.inlayHints.pytestParameters": true,
				//
				// Docker - https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-docker
				// No settings exist
				//
				//
				// Black - https://marketplace.visualstudio.com/items?itemName=ms-python.black-formatter
				//
				"black-formatter.args": [
					"--config",
					"${workspaceFolder}/.devcontainer/.black"
				],
				"black-formatter.cwd": "${workspaceFolder}",
				"black-formatter.enabled": true,
				"black-formatter.showNotification": "onError", // 'off' (default), 'onWarning', 'onError', 'always'
				//
				// Pylint - https://marketplace.visualstudio.com/items?itemName=ms-python.pylint
				//
				"pylint.args": [
					"--rcfile",
					"${workspaceFolder}/.devcontainer/.pylintrc"
				],
				"pylint.cwd": "${workspaceFolder}",
				"pylint.enabled": true,
				"pylint.showNotification": "onError", // 'off' (default), 'onWarning', 'onError', 'always'
				// "pylint.lintOnChange": true,
				//
				// Isort - https://marketplace.visualstudio.com/items?itemName=ms-python.isort
				// Does not work on code save, can trigger by alt+shift+o
				//
				"isort.args": [
					"--settings-path",
					"${workspaceFolder}/.devcontainer/.isort.cfg"
				],
				"isort.serverEnabled": false,
				"isort.check": false,
				"isort.showNotification": "onError", // 'off' (default), 'onWarning', 'onError', 'always'
				//
				// Flake8 - https://marketplace.visualstudio.com/items?itemName=ms-python.flake8
				//
				"flake8.args": [
					"--config",
					"${workspaceFolder}/.devcontainer/.flake8" // default "--config=${workspaceFolder}/.flake8"
				],
				"flake8.cwd": "${workspaceFolder}", // default ${workspaceFolder}
				"flake8.showNotification": "onError", // 'off' (default), 'onWarning', 'onError', 'always'
				"flake8.enabled": true,
				//
				// Mypy - https://marketplace.visualstudio.com/items?itemName=ms-python.mypy-type-checker
				//
				"mypy-type-checker.args": [
					"--config-file",
					"${workspaceFolder}/.devcontainer/.mypy.ini"
				],
				"mypy-type-checker.cwd": "${workspaceFolder}",
				"mypy-type-checker.enabled": true,
				"mypy-type-checker.showNotifications": "onError", // 'off' (default), 'onWarning', 'onError', 'always'
				"mypy-type-checker.reportingScope": "file", // 'file' (default), 'workspace'
				"mypy-type-checker.preferDaemon": false, // set to true if reportingScope is workspace
				//
				// Bandit - https://marketplace.visualstudio.com/items?itemName=nwgh.bandit
				//
				"bandit.args": [
					"-c",
					"${workspaceFolder}/.devcontainer/.bandit"
				],
				"bandit.cwd": "${workspaceFolder}",
				"bandit.logLevel": "warning", // 'error' (default), 'warning'
				"bandit.enabled": true,
				"bandit.showNotification": "onError", // 'off' (default), 'onWarning', 'onError', 'always'
				//
				// Auto docstring - https://marketplace.visualstudio.com/items?itemName=njpwerner.autodocstring
				//
				"autoDocstring.docstringFormat": "google",
				"autoDocstring.generateDocstringOnEnter": true,
				"autoDocstring.includeName": false,
				"autoDocstring.startOnNewLine": true,
				"autoDocstring.guessTypes": true,
				"autoDocstring.quoteStyle": "\"\"\""
			}
		}
	}
}
//
// Predefined Variables
//
// ${cwd} - the task runner's current working directory on startup
// ${workspaceFolder} - the path of the folder opened in VS Code
// ${workspaceRootFolderName} - the name of the folder opened in VS Code without any slashes (/)
// ${workspaceFolderBasename} - the name of the folder opened in VS Code without any slashes (/)
// ${file} - the current opened file
// ${relativeFile} - the current opened file relative to workspaceFolder
// ${relativeFileDirname} - the current opened file's dirname relative to workspaceFolder
// ${fileBasename} - the current opened file's basename
// ${fileBasenameNoExtension} - the current opened file's basename with no file extension
// ${fileDirname} - the current opened file's dirname
// ${fileExtname} - the current opened file's extension
// ${lineNumber} - the current selected line number in the active file
// ${selectedText} - the current selected text in the active file
// ${execPath} - the path to the running VS Code executable