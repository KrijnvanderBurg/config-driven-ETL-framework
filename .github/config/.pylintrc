[MAIN]
source-roots=src/

# Files or directories to be skipped. They should be base names, not paths.
ignore=build,.venv,docs,tests,.devcontainer,.azuredevops,.github

# Add files or directories matching the regex patterns to the ignore-list. The
# regex matches against paths and can be in Posix or Windows format.
ignore-paths=

# Files or directories matching the regex patterns are skipped. The regex
# matches against base names, not paths.
ignore-patterns=

# List of plugins (as comma separated values of python modules names) to load,
# usually to register additional checkers.
load-plugins=
    pylint.extensions.check_elif,
    pylint.extensions.bad_builtin,
    pylint.extensions.docparams,
    pylint.extensions.for_any_all,
    pylint.extensions.set_membership,
    pylint.extensions.code_style,
    pylint.extensions.overlapping_exceptions,
    pylint.extensions.typing,
    pylint.extensions.redefined_variable_type,
    pylint.extensions.comparison_placement,
    pylint.extensions.mccabe,

# Control the amount of potential inferred values when inferring a single
# object. This can help the performance when dealing with large functions or
# complex, nested conditions.
limit-inference-results=100

# Specify a score threshold to be exceeded before program exits with error.
fail-under=10.0

# Return non-zero exit code if any of these messages/categories are detected,
# even if score is above --fail-under value. Syntax same as enable. Messages
# specified are enabled, while categories only check already-enabled messages.
fail-on=


[MESSAGES CONTROL]

# Disable the message, report, category or checker with the given id(s). You
# can either give multiple identifiers separated by comma (,)
disable=R0903,W0246,R0913,R6103,C0411,C0201,W0012,R0902,R0914,R0801,e1101,R1260,R0912,R0915
# R0913 = too many argument (5)
# R6103 consider-using-assignment-expr (walrus operator)
# C0411 wrong-import-order, conflicts with isort
# R0801 similar lines in 2+ files (duplicate-code)
# C0201 Consider iterating the dictionary directly instead of calling .keys()
# W0012 unknown-option-value
# R0902: Too many instance attributes (8/7) (too-many-instance-attributes)
# R0914:too-many-locals
# E1101:no-member (Fails on Pydantic using Field - Instance of 'FieldInfo' has no 'get_secret_value' member)
# R1260: function is too complex. The McCabe rating is 18 (too-complex)
# R0912: Too many branches (13/12) (too-many-branches)
# R0915: Too many statements (52/50) (too-many-statements)

[FORMAT]

# Maximum number of characters on a single line.
max-line-length=120

[MISCELLANEOUS]

# List of note tags to take in consideration, separated by a comma.
notes=FIXME,XXX



[IMPORTS]
known-third-party=pypsark,pandas,cdktf
