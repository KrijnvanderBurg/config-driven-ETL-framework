name: Validate Job Configurations

on:
  workflow_call:
  pull_request:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Package
    uses: ./.github/workflows/build-and-test.yml

  generate-matrix:
    name: Generate Job Matrix
    runs-on: ubuntu-latest
    outputs:
      jobs: ${{ steps.set-matrix.outputs.jobs }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate job matrix
        id: set-matrix
        run: |
          JOBS=$(find examples -name "job.jsonc" -type f | jq -R -s -c 'split("\n")[:-1] | map({"path": .})')
          echo "jobs=${JOBS}" >> $GITHUB_OUTPUT
          echo "Generated matrix:"
          echo "${JOBS}" | jq '.'

  validate-jobs:
    name: Validate Job Config
    needs: [build, generate-matrix]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        job: ${{ fromJSON(needs.generate-matrix.outputs.jobs) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Python
        uses: ./.github/actions/setup-python
        with:
          python-version: 3.13

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Install Package
        uses: ./.github/actions/install-package

      - name: Validate Job Configuration
        run: |
          JOB_PATH="${{ matrix.job.path }}"
          echo "Validating: ${JOB_PATH}"
          
          # Get the directory containing the job.jsonc file
          JOB_DIR=$(dirname "${JOB_PATH}")
          
          # Look for alert.jsonc in the same directory
          if [ -f "${JOB_DIR}/alert.jsonc" ]; then
            python -m samara validate \
              --alert-filepath "${JOB_DIR}/alert.jsonc" \
              --runtime-filepath "${JOB_PATH}"
          else
            echo "Warning: No alert.jsonc found in ${JOB_DIR}, skipping validation"
          fi
