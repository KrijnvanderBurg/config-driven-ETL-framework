name: End-to-End Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run nightly at 3 AM UTC
    - cron: '0 3 * * *'
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.11'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-case: [cast, drop, dropduplicates, filter, join, select, withcolumn]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        uses: ./.github/actions/atomic/poetry-install

      - name: Run E2E test for ${{ matrix.test-case }}
        run: |
          poetry run pytest tests/e2e/test_main.py::test_${{ matrix.test-case }} -v --tb=short

      - name: Upload test artifacts
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: e2e-test-artifacts-${{ matrix.test-case }}
          path: |
            tests/e2e/${{ matrix.test-case }}/load-test/
            flint.log
            ingestion.log

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: e2e-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        uses: ./.github/actions/atomic/poetry-install

      - name: Run full E2E test suite
        run: |
          poetry run pytest tests/e2e/ -v --tb=short --maxfail=3

      - name: Upload comprehensive test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: integration-test-results
          path: |
            tests/e2e/*/load-test/
            flint.log
            ingestion.log
