{
    "alert": {
        "channels": [
            {
                "channel_id": "email",
                "name": "custom-email-alert-name",
                "description": "",
                "enabled": true,
                "smtp_server": "smtp.company.com",
                "smtp_port": 587,
                "username": "username",
                "password": "password",
                "from_email": "etl-alerts@company.com",
                "to_emails": [
                    "ops@company.com",
                    "data-team@company.com"
                ]
            },
            {
                "channel_id": "http",
                "name": "a-http-post-alert-name",
                "url": "https://.slack.com",
                "method": "POST",
                "headers": {
                    "Content-Type": "application/json"
                },
                "timeout": 30,
                "retry": {
                    "raise_on_error": true,
                    "max_attempts": 3,
                    "delay_in_seconds": 30
                }       
            },
            {
                "channel_id": "file",
                "name": "custom-file-alert-name",
                "file_path": "alerts.log"
            }
        ],
        "triggers": [
            {
                "name": "production_critical_errors",
                "enabled": true,
                "description": "",
                "channel_names": ["custom-email-alert-name", "a-http-post-alert-name"],
                "template": {
                    "prepend_title": "ETL Pipeline Alert",
                    "append_title": "Alert Notification",
                    "prepend_body": "Attention: ETL Pipeline Alert",
                    "append_body": "Please take necessary actions."
                },
                "rules": [
                    {"rule": "exception_regex", "pattern": ".*database.*|.*connection.*|.*timeout.*" },
                    {"rule": "env_vars_matches", "env_var_name": "ENVIRONMENT", "env_var_values": ["production", "prod"]}
                ]
            },
            {
                "name": "staging_warnings",
                "enabled": true,
                "description": "",
                "channel_names": ["custom-file-alert-name"],
                "template": {
                    "prepend_title": "ETL Pipeline Alert",
                    "append_title": "Alert Notification",
                    "prepend_body": "Attention: ETL Pipeline Alert",
                    "append_body": "Please take necessary actions."
                },
                "rules": [
                    {"rule": "exception_regex", "pattern": ".*connection.*failed.*|.*timeout.*error.*"},
                    {"rule": "env_vars_matches", "env_var_name": "APP_MODE", "env_var_values": ["debug"]}
                ]
            },
            {
                "name": "team_specific_alerts",
                "enabled": true,
                "description": "",
                "channel_names": ["a-http-post-alert-name"],
                "template": {
                    "prepend_title": "ETL Pipeline Alert",
                    "append_title": "Alert Notification",
                    "prepend_body": "Attention: ETL Pipeline Alert",
                    "append_body": "Please take necessary actions."
                },
                "rules": [
                    {"rule": "exception_regex", "pattern": ".*database.*|.*connection.*|.*timeout.*"}
                ]
            }
        ]
    },
    "runtime": {
        "jobs": [
            {
                "name": "bronze",
                "description": "",
                "enabled": true,
                "engine": "spark",
                "extracts": [
                    {
                        "type": "file",
                        "data_format": "csv",
                        "location": "examples/customer_orders/customers.csv",
                        "method": "batch",
                        "name": "extract-customers",
                        "options": {
                            "delimiter": ",",
                            "header": true,
                            "inferSchema": false
                        },
                        "schema_": "examples/customer_orders/customers_schema.json",
                    }
                ],
                "transforms": [
                    {
                        "name": "transform-join-orders",
                        "upstream_name": "extract-customers",
                        "options": {},
                        "functions": [
                            { "function": "drop", "arguments": {"columns": ["temp_col"]} },
                            { "function": "select", "arguments": {"columns": ["name", "email", "signup_date", "order_id", "order_date", "amount"]} }
                        ]
                    }
                ],
                "loads": [
                    {
                        "name": "load-customer-orders",
                        "upstream_name": "transform-join-orders",
                        "data_format": "csv",
                        "location": "examples/customer_orders/output",
                        "method": "batch",
                        "mode": "overwrite",
                        "options": {
                            "header": true
                        }
                    }
                ]
            }
        ],
        "hooks": {
            "onStart": [],
            "onFailure": [],
            "onSuccess": [
                {
                    "name": "notify-data-is-ready",
                    "type": "https",
                    "config": {
                        "url": "https://.slack.com",
                        "method": "POST",
                        "headers": {
                            "Content-Type": "application/json"
                        },
                        "timeout": 30,
                        "retry": {
                            "error_on_alert_failure": true,
                            "attempts": 3,
                            "delay_in_seconds": 30
                        }
                    }
                }
            ],
            "onFinally": [
                {
                    "name": "archive-processed-files",
                    "action": "move_or_copy_job_files",
                    "operation": "move",                        // allowed: "move" | "copy"
                    "source_location": "incoming/daily/",       // filepath, directory, or "dataframe"
                    "destination_location": "archive/daily/",   // filepath or directory (base target)
                    "hierarchy_base_path": "incoming/daily/",   // optional; root used when preserving source hierarchy
                    "duplicate_handling": {
                        "dedupe_by": ["checksum"],              // options: "checksum"
                        "on_match": "skip",                     // destination already exists and is identical -> allowed: "overwrite" | "version"
                        "on_mismatch": "version",               // destination already exists but is not identical -> allowed: "overwrite" | "version" | "fail" | "notify"
                        "checksum": {
                            "algorithm": "sha256",              // allowed: "md5", "sha1", "sha256"
                            "chunk_size_bytes": 65536,          // default 65536 (64 KiB)
                            "verify_checksum_after_transfer": false    // optional post-transfer verification
                        },
                        "version": {
                            "datetime_format": "yyyyMMddHHmmss", // format applied when creating versioned filenames
                            "timestamp_timezone": "UTC"
                        }
                    }
                }
            ]
        }
    }
}
